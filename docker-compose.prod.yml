version: '3.8'

services:
  # Application Next.js (Production)
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    ports:
      - "3999:3999"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/collabspace
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_SECRET=your-production-secret-key
      - NEXTAUTH_URL=https://your-domain.com
    depends_on:
      - postgres
      - redis
    networks:
      - collabspace-network
    restart: unless-stopped

  # Base de donn√©es PostgreSQL
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: collabspace
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    networks:
      - collabspace-network
    restart: unless-stopped

  # Redis pour cache et sessions
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data_prod:/data
    networks:
      - collabspace-network
    restart: unless-stopped

  # Nginx Reverse Proxy (optionnel)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - collabspace-network
    restart: unless-stopped

volumes:
  postgres_data_prod:
  redis_data_prod:

networks:
  collabspace-network:
    driver: bridge
